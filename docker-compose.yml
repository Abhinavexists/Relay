version: '3.8'

services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DB_NAME=workflow_automation
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES}
      - DEBUG=true
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - .:/app
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload

  telegram-bot:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DB_NAME=workflow_automation
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - API_HOST=backend
      - API_PORT=8000
    depends_on:
      - backend
      - mongodb
    networks:
      - app-network
    volumes:
      - .:/app
    command: python -m telegram_bot.bot

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
